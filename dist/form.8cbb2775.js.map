{"version":3,"sources":["../src/utils/input.js","../src/utils/withForm.js","form.js"],"names":["input","formEl","inputEl","options","value","defaultValue","update","name","withForm","__bootstrapped","Object","assign","payload","state","inputName","querySelector","form","document","validate"],"mappings":";AAWC,aAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EALM,SAASA,EAAMC,EAAQC,EAASC,GAC/BC,IAAAA,EAASF,EAAQE,MAAQD,EAAQE,cAAgB,GACvDJ,EAAOK,OACJJ,EAAAA,GAAAA,EAAQK,KAAOH,IAEnB,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,MAAA;;ACYA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,SAAA,EAvBD,IAAA,EAAA,QAAA,WAuBC,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAjBM,SAASI,EAASP,GAWhB,OATFA,EAAOQ,gBACVC,OAAOC,OAAOV,EAAQ,CACpBQ,gBAAgB,EAChBH,OAAOM,SAAAA,GACAC,KAAAA,MAAa,EAAA,GAAA,KAAKA,MAAUD,GAAAA,MAKhC,CACLZ,MAAMc,SAAAA,EAAWX,GAER,OADDF,EAAAA,EAAAA,OAAAA,EAAQA,EAAOc,cAAwBD,UAAAA,OAAAA,EAA7C,OAA6DX,GACtD;;AClBb,aAFA,IAAA,EAAA,QAAA,0BAEA,WACQa,IAAAA,EAAOC,SAASF,cAAc,kBAC/BC,IAGIA,EAAAA,EAAAA,UAAAA,GACNhB,MAAM,OAAQ,CACbK,aAAc,GACda,SAASd,SAAAA,OAIVJ,MAAM,QAAS,CACdK,aAAc,KAbpB","file":"form.8cbb2775.js","sourceRoot":"..\\public","sourcesContent":["/**\r\n *\r\n * @param {HTMLElement} formEl\r\n * @param {HTMLInputElement} inputEl\r\n * @param {import(\".\").InputOptions} options\r\n */\r\nexport function input(formEl, inputEl, options) {\r\n  const value = (inputEl.value = options.defaultValue || \"\");\r\n  formEl.update({\r\n    [inputEl.name]: value\r\n  });\r\n}\r\n","import { input } from \"./input\";\r\n\r\n/**\r\n *\r\n * @param {HTMLElement} formEl\r\n */\r\nexport function withForm(formEl) {\r\n\r\n  if (!formEl.__bootstrapped) {\r\n    Object.assign(formEl, {\r\n      __bootstrapped: true,\r\n      update(payload) {\r\n        this.state = { ...this.state, ...payload }\r\n      }\r\n    })\r\n  }\r\n\r\n  return {\r\n    input(inputName, options) {\r\n      input(formEl, formEl.querySelector(`[name=\"${inputName}\"]`), options);\r\n      return this;\r\n    }\r\n  };\r\n}\r\n","import { withForm } from \"../src/utils/withForm\";\r\n \r\n(function() {\r\n  const form = document.querySelector(\"form-container\");\r\n  if (!form) {\r\n    return;\r\n  }\r\n  withForm(form)\r\n    .input(\"name\", {\r\n      defaultValue: \"\",\r\n      validate(value) {\r\n        \r\n      }\r\n    })\r\n    .input(\"email\", {\r\n      defaultValue: \"\"\r\n    });\r\n})();\r\n"]}